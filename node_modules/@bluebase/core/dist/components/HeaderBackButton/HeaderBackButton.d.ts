import { ImageStyle, StyleProp, TextStyle, ViewStyle } from 'react-native';
import React from 'react';
import { Theme } from '../../registries';
export interface HeaderBackButtonProps {
    tintColor?: string;
    backTitleVisible?: boolean;
    title?: string | null;
    backImage?: React.ReactElement<any>;
    truncatedTitle?: string;
    titleStyle?: StyleProp<TextStyle>;
    pressColorAndroid?: string;
    onPress?: () => void;
    width?: number;
    allowFontScaling?: boolean;
    styles?: Partial<HeaderBackButtonStyles>;
    style?: StyleProp<ViewStyle>;
    testId?: string;
}
export interface HeaderBackButtonState {
    initialTextWidth?: number;
}
export interface HeaderBackButtonStyles {
    androidButtonWrapper: StyleProp<ViewStyle>;
    icon: StyleProp<ImageStyle>;
    iconWithTitle: StyleProp<ImageStyle>;
    wrapper: StyleProp<ViewStyle>;
    title: StyleProp<TextStyle>;
}
declare class HeaderBackButton extends React.PureComponent<HeaderBackButtonProps, HeaderBackButtonState> {
    static defaultProps: {
        defaultStyles: {};
        pressColorAndroid: string;
        truncatedTitle: string;
    };
    state: HeaderBackButtonState;
    static defaultStyles: (theme: Theme) => {
        androidButtonWrapper: {
            backgroundColor: string;
            margin: number;
        };
        icon: {
            backgroundColor: string;
            height: number;
            marginLeft: number;
            marginRight: number;
            marginVertical: number;
            resizeMode: string;
            transform: {
                scaleX: number;
            }[];
            width: number;
        } | {
            backgroundColor: string;
            height: number;
            margin: number;
            resizeMode: string;
            transform: {
                scaleX: number;
            }[];
            width: number;
        };
        iconWithTitle: {
            marginRight: number;
        } | {
            marginRight?: undefined;
        };
        title: {
            color: string;
            fontSize: number;
            paddingRight: number;
        };
        wrapper: {
            alignItems: string;
            backgroundColor: string;
            flexDirection: string;
        };
    };
    _onTextLayout: (e: any) => void;
    _renderBackImage(): JSX.Element | React.ReactElement<{}>;
    _getTitleText: () => string | null | undefined;
    _maybeRenderTitle(): JSX.Element | null;
    render(): JSX.Element;
}
export { HeaderBackButton };
