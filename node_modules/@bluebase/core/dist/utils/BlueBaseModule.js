"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const Modules_1 = require("./Modules");
const Promises_1 = require("./Promises");
const lodash_isnil_1 = tslib_1.__importDefault(require("lodash.isnil"));
/**
 * Creates a BlueBaseModule promise
 * @param input
 */
function createBlueBaseModule(input) {
    const module = Modules_1.getDefiniteModule(input);
    const promisedModule = Promises_1.getDefinitePromise(module);
    const promise = new Promise((resolve, reject) => {
        promisedModule
            .then((m) => {
            promise.loaded = true;
            return resolve(Modules_1.getDefiniteModule(m));
        })
            .catch(reject);
    });
    promise.isAsync = Promises_1.isPromise(module) ? true : false;
    promise.module = module;
    promise.loaded = false;
    return promise;
}
exports.createBlueBaseModule = createBlueBaseModule;
/**
 * Checks if an input object is a BlueBaseModule. Returns as is if true, otherwise,
 * wraps the input into a BlueBaseModule and returns.
 *
 * @param input Input object
 */
function getDefiniteBlueBaseModule(input) {
    if (isBlueBaseModule(input)) {
        return input;
    }
    return createBlueBaseModule(input);
}
exports.getDefiniteBlueBaseModule = getDefiniteBlueBaseModule;
/**
 * Check if an input object is an instance of BlueBaseModule
 * @param input Input object
 */
function isBlueBaseModule(input) {
    return Promises_1.isPromise(input) && !lodash_isnil_1.default(input.isAsync) && !lodash_isnil_1.default(input.module);
}
exports.isBlueBaseModule = isBlueBaseModule;
