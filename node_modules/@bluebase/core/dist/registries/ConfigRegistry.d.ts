import { ItemCollection, Registry, RegistryInputItem, RegistryItem } from './Registry';
export { ItemCollection as ConfigCollection } from './Registry';
/**
 * ðŸŽ› ConfigRegistry
 */
export declare class ConfigRegistry extends Registry<RegistryItem> {
    /**
     * Registers a value if it's not already registered.
     * @param item
     */
    registerIfNotExists(item: RegistryItem | RegistryItem['value'] | RegistryInputItem | RegistryInputItem['value']): Promise<void>;
    registerIfNotExists(key: string, item: RegistryItem | RegistryItem['value'] | RegistryInputItem | RegistryInputItem['value']): Promise<void>;
    /**
     * Registers all collection items that aren't already registered.
     * @param collection
     */
    registerCollectionIfNotExists(collection?: ItemCollection<RegistryInputItem>): Promise<void>;
}
