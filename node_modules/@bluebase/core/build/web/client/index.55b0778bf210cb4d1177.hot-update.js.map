{"version":3,"sources":["webpack:///./src/hooks/routes.ts"],"names":["routes","key","priority","value","inputRoutes","_ctx","BB","Hooks","run","header","name","path","navigator","navigationOptions","rootRoutes","type","initialRouteName","_bootOptions","pluginRoutes","Plugins","entries","item","plugin","isEnabled","route","push","console","log","mainRoutes","screen"],"mappings":";;;;;;;;;8tBAGA,oHACA,oHACA,uEAGO,GAAMA,OAA4B,CAAG,CAC3C,0BAA2B,CAC1B,CACCC,GAAG,CAAE,0CADN,CAECC,QAAQ,CAAE,CAFX,CAICC,KAAK,gFAAE,iBAAOC,WAAP,CAAoCC,IAApC,CAA8CC,EAA9C,wJASaA,GAAE,CAACC,KAAH,CAASC,GAAT,CAAa,yBAAb,CAAwC,EAAxC,CATb,8CAUe,CAClBC,MAAM,CAAE,IADU,CAVf,cAOJC,IAPI,CAOE,MAPF,CAQJC,IARI,CAQE,EARF,CASJC,SATI,aAUJC,iBAVI,wCAEAC,UAFA,EAGLC,IAHK,CAGC,OAHD,CAILC,gBAJK,CAIa,MAJb,CAMLhB,MANK,8CAgBC,uBAAUI,WAAV,CAAuBU,UAAvB,CAhBD,6DAAF,mFAJN,CAD0B,CADgB,CA6B3C,0BAA2B,CAC1B,CACCb,GAAG,CAAE,0CADN,CAECC,QAAQ,CAAE,CAFX,CAKCC,KAAK,iFAAE,kBAAOc,YAAP,CAAkCZ,IAAlC,CAA4CC,EAA5C,0PAGAY,YAHA,CAGe,EAHf,4GAIoBZ,EAAE,CAACa,OAAH,CAAWC,OAAX,EAJpB,uPAIMnB,GAJN,gBAIWoB,IAJX,wCAKgBA,KAAI,CAAClB,KALrB,SAKCmB,MALD,gBAML,GAAGhB,EAAE,CAACa,OAAH,CAAWI,SAAX,CAAqBtB,GAArB,GAA6B,CAAC,oBAAMqB,MAAM,CAACE,KAAb,CAAjC,CAAsD,CACrDN,YAAY,CAACO,IAAb,CAAkB,wBAAaH,MAAM,CAACE,KAApB,CAAlB,EACA,CARI,ofAWNE,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4BT,YAA5B,EAEMU,UAbA,CAa6B,CAClCb,IAAI,CAAE,OAD4B,CAElCC,gBAAgB,CAAE,MAFgB,CAGlChB,MAAM,EAAG,CACRU,IAAI,CAAE,MADE,CAERC,IAAI,CAAE,EAFE,CAGRkB,MAAM,CAAE,YAHA,CAAH,SAIAX,YAJA,CAH4B,CAb7B,CAuBNQ,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BC,UAA1B,EAvBM,iCAwBCA,UAxBD,2FAAF,qFALN,CAD0B,CA7BgB,CAArC,C","file":"index.55b0778bf210cb4d1177.hot-update.js","sourcesContent":["import { BlueBase, BootOptions } from '../BlueBase';\nimport { NavigatorProps, RouteConfig } from '../components';\nimport { HookNestedCollection } from '../registries';\nimport deepmerge from 'deepmerge';\nimport isnil from 'lodash.isnil';\nimport { resolveThunk } from '../utils';\n\n// tslint:disable:object-literal-sort-keys\nexport const routes: HookNestedCollection = {\n\t'bluebase.navigator.root': [\n\t\t{\n\t\t\tkey: 'bluebase-navigator-root-internal-default',\n\t\t\tpriority: 5,\n\n\t\t\tvalue: async (inputRoutes: NavigatorProps, _ctx: {}, BB: BlueBase) => {\n\n\t\t\t\tconst rootRoutes: NavigatorProps = {\n\t\t\t\t\ttype: 'stack',\n\t\t\t\t\tinitialRouteName: 'Root',\n\n\t\t\t\t\troutes: [{\n\t\t\t\t\t\tname: 'Root',\n\t\t\t\t\t\tpath: '',\n\t\t\t\t\t\tnavigator: await BB.Hooks.run('bluebase.navigator.main', {} as any),\n\t\t\t\t\t\tnavigationOptions: {\n\t\t\t\t\t\t\theader: null,\n\t\t\t\t\t\t}\n\t\t\t\t\t}]\n\t\t\t\t};\n\n\t\t\t\treturn deepmerge(inputRoutes, rootRoutes);\n\n\t\t\t},\n\t\t},\n\t],\n\n\n\t'bluebase.navigator.main': [\n\t\t{\n\t\t\tkey: 'bluebase-navigator-main-internal-default',\n\t\t\tpriority: 5,\n\n\t\t\t// tslint:disable-line:object-literal-sort-keys\n\t\t\tvalue: async (_bootOptions: BootOptions, _ctx: {}, BB: BlueBase) => {\n\n\n\t\t\t\tconst pluginRoutes = [];\n\t\t\t\tfor (const [key, item] of BB.Plugins.entries()) {\n\t\t\t\t\tconst plugin = await item.value;\n\t\t\t\t\tif(BB.Plugins.isEnabled(key) && !isnil(plugin.route)) {\n\t\t\t\t\t\tpluginRoutes.push(resolveThunk(plugin.route));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconsole.log('pluginRoutes', pluginRoutes);\n\n\t\t\t\tconst mainRoutes: NavigatorProps = {\n\t\t\t\t\ttype: 'stack',\n\t\t\t\t\tinitialRouteName: 'Home',\n\t\t\t\t\troutes: [{\n\t\t\t\t\t\tname: 'Home',\n\t\t\t\t\t\tpath: '',\n\t\t\t\t\t\tscreen: 'HomeScreen',\n\t\t\t\t\t}, ...pluginRoutes]\n\t\t\t\t};\n\n\t\t\t\tconsole.log('mainRoutes', mainRoutes);\n\t\t\t\treturn mainRoutes;\n\n\t\t\t},\n\t\t},\n\t],\n};\n"],"sourceRoot":""}